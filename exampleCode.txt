import { useState, useEffect } from 'react';
import './App.css';

function App() {
  const apiKey = '535365952b323120f28a315659288c54';
  const city = 'Islamabad'; 

  const [weatherData, setWeatherData] = useState<any>();
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`;

    fetch(apiUrl)
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        setWeatherData(data);
        setLoading(false);
      })
      .catch(error => {
        console.error('Error fetching data:', error);
        setLoading(false);
      });
      console.log(weatherData)
  }, [apiKey, city]); // Include apiKey and city in the dependency array

  return (
    <div>
      <h1>Weather App</h1>
      {loading ? (
        <p>Loading...</p>
      ) : (
        weatherData && (
          <div>
            <h2>Weather in {weatherData.name}, {weatherData.sys.country}</h2>
            <p>Temperature: {(weatherData.main.temp - 273.15).toFixed(1)} C</p>
            <p>Weather: {weatherData.weather[0].main}</p>
            <p>Description: {weatherData.weather[0].description}</p>
          </div>
        )
      )}
    </div>
  );
}

export default App;


/////////////////////////////////////////

import { useState, useEffect } from 'react';
import './App.css';
const apiUrl = 'https://api.open-meteo.com/v1/forecast?latitude=33.7215&longitude=73.0433&hourly=temperature_2m,apparent_temperature,visibility&daily=temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min&current_weather=true&timezone=auto&start_date=2023-08-17&end_date=2023-08-24'

function App() {

  const [weatherData, setWeatherData] = useState<any>();
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetch(apiUrl)
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        setWeatherData(data);
        setLoading(false);
      })
      .catch(error => {
        console.error('Error fetching data:', error);
        setLoading(false);
      });
      console.log(weatherData)
  }, [apiUrl]);

  return (
    <div>
      <h1>Weather App</h1>
      {loading ? (
        <p>Loading...</p>
      ) : (
        weatherData && (
          <div>
            <h2>7-Day Weather Forecast for {weatherData.timezone}</h2>
            <ul>
              {weatherData.hourly.temperature_2m.slice(0, 7).map((temperature: string, index: number) => (
                <li key={index}>Day {index + 1}: {temperature} Â°C</li>
              ))}
            </ul>
          </div>
        )
      )}
    </div>
  );
}

export default App;
